# YAML schema for GitHub Actions:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
#
# Helpful YAML parser to clarify YAML syntax:
# https://yaml-online-parser.appspot.com/
#
#
# This file contains the workflows that are run prior to merging a pull request.

name: CI

on:
  pull_request:
    types: [labeled]

  schedule:
    - cron: '0 4 * * *'

  # Allow manually triggering of the workflow.
  workflow_dispatch: {}


# Setting up an environment variable to determine if a job should run or not
# based on the combination of events that trigger a workflow as well as
# additional factors, such as a particular label on a PR.
#
# Note that ideally, we would be able to have something like:
#   job.<job_id>.if: ${SHOUL_RUN} == true
# But that appears to not work without any error message.
#
# As a result, we are resorting to the more verbose approach of the first step
# of every job running a bash if statement to check if the job should proceed or
# not.
env:
  SHOULD_RUN: ${{ github.event_name == 'schedule' ||
                  github.event_name == 'workflow_dispatch' ||
                  (github.event_name == 'pull_request' &&
                     contains(github.event.pull_request.labels.*.name, 'ci:run')) }}

jobs:
  bazel_tests:
    runs-on: ubuntu-latest
    name: Bazel Tests
    steps:
      - name: Should job proceed
        run: |
          if [ "${SHOULD_RUN}" == "true" ]; then
            exit
          else
            printf 'ERROR: This job should not proceed.\n'
            exit 1
          fi
      - uses: actions/checkout@v2
      - name: Set up bazel
        run: |
          sudo ci/install_bazel.sh
      - name: Test
        run: |
          tensorflow/lite/micro/tools/ci_build/test_bazel.sh

  cortex_m_tests:
    runs-on: ubuntu-latest
    name: Cortex-M tests
    steps:
      - name: Should job proceed
        run: |
          if [ "${SHOULD_RUN}" == "true" ]; then
            exit
          else
            printf 'ERROR: This job should not proceed.\n'
            exit 1
          fi
      - uses: actions/checkout@v2
      - name: Test
        run: |
          tensorflow/lite/micro/tools/ci_build/test_bluepill.sh
          tensorflow/lite/micro/tools/ci_build/test_stm32f4.sh

  check_code_style:
    runs-on: ubuntu-latest
    name: Code Style
    steps:
      - name: Should job proceed
        run: |
          if [ "${SHOULD_RUN}" == "true" ]; then
            exit
          else
            printf 'ERROR: This job should not proceed.\n'
            exit 1
          fi
      - uses: actions/checkout@v2
      - name: Check
        # TODO(#11): Update the docker image to be hosted via github packages.
        uses: docker://jpwithers/tflite-micro-tests
        with:
          args: /bin/sh -c "/opt/tflm/tensorflow/lite/micro/tools/ci_build/test_code_style.sh"

  project_generation:
    runs-on: ubuntu-latest
    name: Project generation
    steps:
      - name: Should job proceed
        run: |
          if [ "${SHOULD_RUN}" == "true" ]; then
            exit
          else
            printf 'ERROR: This job should not proceed.\n'
            exit 1
          fi
      - uses: actions/checkout@v2
      - name: Test
        run: |
          # TODO(b/184886633): the downloads should happen as part of the create_tflm_tree
          # script or should optinally not be required.
          make -f tensorflow/lite/micro/tools/make/Makefile third_party_downloads
          tensorflow/lite/micro/tools/ci_build/test_project_generation.sh

  x86_tests:
    runs-on: ubuntu-latest
    name: Makefile x86 tests
    steps:
      - name: Should job proceed
        run: |
          if [ "${SHOULD_RUN}" == "true" ]; then
            exit
          else
            printf 'ERROR: This job should not proceed.\n'
            exit 1
          fi
      - uses: actions/checkout@v2
      - name: Test
        run: |
          tensorflow/lite/micro/tools/ci_build/test_makefile.sh
          tensorflow/lite/micro/tools/ci_build/test_x86.sh

      # TODO(#13): Uncomment the lines below once we can appropriately change
      # labels from PRs created from forks.
      # - name: Remove ci:run Tag
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     script: |
      #       github.issues.removeLabel({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         name: 'ci:run'
      #       })
