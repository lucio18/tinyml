# YAML schema for GitHub Actions:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
#
# Helpful YAML parser to clarify YAML syntax:
# https://yaml-online-parser.appspot.com/

name: Cortex-M on Arm Virtual Hardware

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule
on: [push, pull_request]

jobs:
  cortex_m_generic_gcc:
    runs-on: ubuntu-latest
    container:
      # Use the custom Docker image with the necessary tools and dependencies
      image: ghcr.io/arm-software/avh-mlops/arm-mlops-docker-licensed-community:latest

    steps:
      - uses: actions/checkout@v4
      - name: Set permissions for working directory __w
        run: chmod 777 -R /__w
      - uses: actions/setup-python@v5
        with: 
              python-version: '3.10'
      - name: Install dependencies
        run: |
              sudo apt-get update
              sudo apt-get install --fix-missing
              pip3 install Pillow
              pip3 install Wave
              pip3 install numpy
              sudo apt-get install zip unzip git curl -y
      - name: Test with GCC
        run: |
              su -l arm_mlops_docker -c "cd /__w/tflite-micro/tflite-micro/ && tensorflow/lite/micro/tools/ci_build/test_cortex_m_generic.sh gcc" 

  cortex_m_generic_ac6:
    runs-on: ubuntu-latest
    container:
      # Use the custom Docker image with the necessary tools and dependencies
      image: ghcr.io/arm-software/avh-mlops/arm-mlops-docker-licensed-community:latest

    steps:
      - uses: actions/checkout@v4
      - name: Set permissions for working directory __w
        run: chmod 777 -R /__w
      - uses: actions/setup-python@v5
        with: 
              python-version: '3.10'
      - name: Install dependencies
        run: |
              sudo apt-get update
              sudo apt-get install --fix-missing
              pip3 install Pillow
              pip3 install Wave
              pip3 install numpy
              sudo apt-get install zip unzip git curl -y
      - name: Test with Arm Compiler 6
        run: |
              su -l arm_mlops_docker -c "export PATH=$PATH:/home/arm_mlops_docker/ArmCompilerforEmbedded6.20/bin/"
              su -l arm_mlops_docker -c "cd /__w/tflite-micro/tflite-micro/ && tensorflow/lite/micro/tools/ci_build/test_cortex_m_generic.sh armclang" 

  cortex_m_corstone_300_gcc:
    runs-on: ubuntu-latest
    container:
      # Use the custom Docker image with the necessary tools and dependencies
      image: ghcr.io/arm-software/avh-mlops/arm-mlops-docker-licensed-community:latest

    steps:
      - uses: actions/checkout@v4
      - name: Set permissions for working directory __w
        # Set permissions for the working directory to avoid permission errors
        run: chmod 777 -R /__w
      - uses: actions/setup-python@v5
        with: 
              python-version: '3.10'
      - name: Install dependencies
        run: |
              sudo apt-get update
              sudo apt-get install --fix-missing
              pip3 install Pillow
              pip3 install Wave
              pip3 install numpy
              sudo apt-get install zip unzip git curl xxd -y
      - name: Test with GCC
        run: |
              su -l arm_mlops_docker -c "cd /__w/tflite-micro/tflite-micro/ && tensorflow/lite/micro/tools/ci_build/test_cortex_m_corstone_300.sh gcc" 

  cortex_m_corstone_300_ac6:
    runs-on: ubuntu-latest
    container:
      # Use the custom Docker image with the necessary tools and dependencies
      image: ghcr.io/arm-software/avh-mlops/arm-mlops-docker-licensed-community:latest

    steps:
      - uses: actions/checkout@v4
      - name: Set permissions for working directory __w
        # Set permissions for the working directory to avoid permission errors
        run: chmod 777 -R /__w
      - uses: actions/setup-python@v5
        with: 
              python-version: '3.10'
      - name: Install dependencies
        run: |
              sudo apt-get update
              sudo apt-get install --fix-missing
              pip3 install Pillow
              pip3 install Wave
              pip3 install numpy
              sudo apt-get install zip unzip git curl xxd -y
      - name: Test with Arm Compiler 6
        run: |
              su -l arm_mlops_docker -c "export PATH=$PATH:/home/arm_mlops_docker/ArmCompilerforEmbedded6.20/bin/"
              su -l arm_mlops_docker -c "cd /__w/tflite-micro/tflite-micro/ && tensorflow/lite/micro/tools/ci_build/test_cortex_m_corstone_300.sh armclang" 

  
  issue-on-error:
    needs: [cortex_m_generic_gcc, cortex_m_generic_ac6, cortex_m_corstone_300_gcc, cortex_m_corstone_300_ac6]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    uses: ./.github/workflows/issue_on_error.yml
    with:
      repo: ${{ github.repository }}
      workflow: ${{ github.workflow }}
      run_id: ${{ github.run_id }}
      run_number: ${{ github.run_number }}
      flag_label: ci:bot_issue
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
